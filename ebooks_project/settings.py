"""
Django settings for ebooks_project project.

Generated by 'django-admin startproject' using Django 5.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent   # Above line for to retrieve the base file means main folder. what is root folder


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-j+gmcsb2w3hm62(%d22%e5_bukr1_gxy%_!t%1b&xeltu7f3$p'  # It is used for encrypt user password

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True  # If true It run in development mode and it give for error information

ALLOWED_HOSTS = [] # If Host this application on server then mention that server address in this list. It also said that our django project in which hosting services is running.


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # Above are by default application.To show which are application installed. It is register we register our application in this block.
    'ebooks_app' # Register our app
] 
   

MIDDLEWARE = [
     # This middleware it make that how to send request from a to c in this b is middleware
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware', # It prevent cross site hijacking
]

ROOT_URLCONF = 'ebooks_project.urls' # It is main enter point in application

TEMPLATES = [
    # It will help to make understating html file to django
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [], # On this array we register custom templates directory
        'APP_DIRS': True,
        'OPTIONS': {
            # Above line is explain how to handel templates and how to give any error in templates
            # It explain how to access python variable our data from database in html templates this are explain on hear.
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'ebooks_project.wsgi.application' # It explain where is our server is for example when deploy our server in apache server next apache server and our django to connect this will help to connect this application
# wsgi.py is inbuilt gateway for server and django


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    # This below code for configure our database
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
    # , example for creating database if have password and username also mention hear for if have
    #  'example': {
    #     'ENGINE': 'django.db.backends.sqlite3',
    #     'NAME': BASE_DIR / 'db.sqlite3',
    # }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Kolkata' # It is set our time zone

USE_I18N = True  # It is used for multi language support configuration

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField' # It explain which is primary key in our application
